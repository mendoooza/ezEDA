scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA/CAN/CHN/FRA Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))+
facet_wrap(~Country.Name, ncol = 1)
ggplot(UE_Compare, mapping = aes(x=Country.Name,y=UE_rate, fill = Country.Code))+
stat_summary(fun = "mean", geom = "bar")+
scale_fill_manual(values = c("USA" = "lightgreen",
"CAN" = "lightgreen",
"CHN" = "lightgreen",
"FRA" = "lightpink"))+
scale_y_continuous(limits = c(0,10),expand = c(0,0))+
guides(fill = FALSE)+
labs(x = "Year",
y = "Avg. Unemployment Rate",
title = "USA/CAN/CHN/FRA Avg. UE Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"),
axis.text.x = element_text(face = "bold.italic"))
ggplot(UE_Compare, mapping = aes(x=as.factor(Year),y=UE_rate, fill = Country.Code))+
geom_bar(stat = "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", UE_rate),
group = Country.Code),
position = position_fill(vjust = 0.5),
color = "white", size = 3) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Year",
y= "Unemployment Rate",
title = "100% Stacked Bar Comparison of UE Rate (1991-2021)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_pivot, mapping = aes(x=as.factor(Year),y=UE_rate))+
geom_boxplot(outlier.color = "lightpink", fill = "lightblue")+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "Global Boxplot of Unemployment Rate",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_pivot, mapping = aes(x=Year, y=UE_rate))+
geom_smooth()+
scale_x_continuous(breaks = unique(UE_pivot$Year), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "Global Unemployment Rate (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_pivot, mapping = aes(x=UE_rate))+
geom_histogram(bins = 100, fill = "lightgreen")+
scale_x_continuous(n.breaks = 20, expand = c(0,0))+
labs(x= "Unemployment Rate",
y= "Distribution Frequency",
title = "Global Unemployment Rate Frequency (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_pivot, mapping = aes(x=UE_rate))+
geom_histogram(bins = 100, fill = "darkgreen")+
scale_x_continuous(n.breaks = 20, expand = c(0,0))+
labs(x= "Unemployment Rate",
y= "Distribution Frequency",
title = "Global Unemployment Rate Frequency (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_pivot, mapping = aes(x=UE_rate))+
geom_histogram(bins = 100, fill = "darkgreen")+
scale_x_continuous(n.breaks = 20, expand = c(0,0))+
scale_y_continuous(limits = c(0,400, by 100))
ggplot(UE_pivot, mapping = aes(x=UE_rate))+
geom_histogram(bins = 100, fill = "darkgreen")+
scale_x_continuous(n.breaks = 20, expand = c(0,0))+
scale_y_continuous(limits = c(0,400), expand = c(0,0))
ggplot(UE_pivot, mapping = aes(x=UE_rate))+
geom_histogram(bins = 100, fill = "darkgreen")+
scale_x_continuous(n.breaks = 20, expand = c(0,0))+
scale_y_continuous(limits = c(0,400), expand = c(0,0))+
labs(x= "Unemployment Rate",
y= "Distribution Frequency",
title = "Global Unemployment Rate Frequency (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"))
ggplot(USA_avg, mapping = aes(x=Year, y=avg_UE, fill = isUSA))+
geom_smooth()+
scale_x_continuous(breaks = seq(1991,2021, by = 1), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA Comparative Unemployment Rate (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(USA_avg, mapping = aes(x=Year, y=avg_UE, fill = isUSA))+
geom_smooth()+
scale_x_continuous(breaks = seq(1991,2021, by = 1), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA Comparative Unemployment Rate (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(USA_avg, mapping = aes(x=as.factor(Year),y=avg_UE, fill = isUSA))+
geom_bar(stat= "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", avg_UE),
group = isUSA),
position = position_fill(vjust = 0.5),
color = "white", size = 3)+
scale_y_continuous(expand = c(0,0))+
labs(x = "Year",
y = "Avg. Unemployment Rate",
title = "USA vs. Global Yearly Avg. UE Rate (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(USA_avg, mapping = aes(x=Year, y=avg_UE, fill = isUSA))+
geom_bar(stat = "identity",position = "dodge")+
facet_wrap(~isUSA)+
scale_y_continuous(limits = c(0,10) ,expand = c(0,0))+
scale_x_continuous(breaks = seq(1991,2021, by = 5), expand = c(0,0))+
labs(x = "Average Unemployment Rate",
y = "Year",
title = "USA vs. Global Yearly Avg. UE Rate (1991-2021)",
caption = "By: Alex Mendoza")+
guides(fill = FALSE)+
theme_bw()+
theme(axis.text.x = element_text(angle = 90 ,hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))
ggplot(UE_Compare, mapping = aes(x=Year, y=UE_rate, color = Country.Code))+
geom_point()+
geom_smooth(size = 1)+
scale_x_continuous(breaks = seq(1991,2021, by = 5), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA/CAN/CHN/FRA Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))+
facet_wrap(~Country.Name, ncol = 1)
ggplot(UE_Compare, mapping = aes(x=Year, y=UE_rate, color = Country.Code))+
geom_point()+
geom_smooth(size = 1)+
scale_x_continuous(breaks = seq(1991,2021, by = 5), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA/CAN/CHN/FRA Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))+
facet_wrap(~Country.Name, ncol = 1)
ggplot(UE_Compare, mapping = aes(x=Country.Name,y=UE_rate, fill = Country.Code))+
stat_summary(fun = "mean", geom = "bar")+
scale_fill_manual(values = c("USA" = "lightgreen",
"CAN" = "lightgreen",
"CHN" = "lightgreen",
"FRA" = "lightpink"))+
scale_y_continuous(limits = c(0,10),expand = c(0,0))+
guides(fill = FALSE)+
labs(x = "Year",
y = "Avg. Unemployment Rate",
title = "USA/CAN/CHN/FRA Avg. UE Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"),
axis.text.x = element_text(face = "bold.italic"))
ggplot(UE_Compare, mapping = aes(x=as.factor(Year),y=UE_rate, fill = Country.Code))+
geom_bar(stat = "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", UE_rate),
group = Country.Code),
position = position_fill(vjust = 0.5),
color = "white", size = 3) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Year",
y= "Unemployment Rate",
title = "100% Stacked Bar Comparison of UE Rate (1991-2021)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_Compare, mapping = aes(x=as.factor(Year),y=UE_rate, fill = Country.Code))+
geom_bar(stat = "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", UE_rate),
group = Country.Code),
position = position_fill(vjust = 0.5),
color = "white", size = 3) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Year",
y= "Unemployment Rate",
title = "USA/CAN/CHN/FRA Stacked Bar Comparison of UE Rate (1991-2021)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_Compare, mapping = aes(x=Year, y=UE_rate, color = Country.Code))+
geom_point()+
geom_smooth(size = 1)+
scale_x_continuous(breaks = seq(1991,2021, by = 5), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA/CAN/CHN/FRA Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))+
facet_wrap(~Country.Name, ncol = 1)
ggplot(UE_Compare, mapping = aes(x=Year, y=UE_rate, color = Country.Code))+
geom_point()+
geom_smooth(size = 1)+
scale_x_continuous(breaks = seq(1991,2021, by = 5), limits = c(1991,2021),
expand = c(0,0))+
scale_y_continuous(n.breaks = 10)+
labs(x = "Year",
y = "Unemployment Rate",
title = "USA/CAN/CHN/FRA Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = .5, face = "bold"),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(face = "bold"))+
facet_wrap(~Country.Name, ncol = 1)
ggplot(UE_Compare, mapping = aes(x=Country.Name,y=UE_rate, fill = Country.Code))+
stat_summary(fun = "mean", geom = "bar")+
scale_fill_manual(values = c("USA" = "lightgreen",
"CAN" = "lightgreen",
"CHN" = "lightgreen",
"FRA" = "lightpink"))+
scale_y_continuous(limits = c(0,10),expand = c(0,0))+
guides(fill = FALSE)+
labs(x = "Year",
y = "Avg. Unemployment Rate",
title = "USA/CAN/CHN/FRA Avg. UE Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"),
axis.text.x = element_text(face = "bold.italic"))
ggplot(UE_Compare, mapping = aes(x=reorder(Country.Name, -UE_rate),y=UE_rate, fill = Country.Code))+
stat_summary(fun = "mean", geom = "bar")+
scale_fill_manual(values = c("USA" = "lightgreen",
"CAN" = "lightgreen",
"CHN" = "lightgreen",
"FRA" = "lightpink"))+
scale_y_continuous(limits = c(0,10),expand = c(0,0))+
guides(fill = FALSE)+
labs(x = "Year",
y = "Avg. Unemployment Rate",
title = "USA/CAN/CHN/FRA Avg. UE Rate Comparison (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(plot.title = element_text(hjust = .5, face = "bold"),
axis.text.x = element_text(face = "bold.italic"))
ggplot(UE_Compare, mapping = aes(x=as.factor(Year),y=UE_rate, fill = Country.Code))+
geom_bar(stat = "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", UE_rate),
group = Country.Code),
position = position_fill(vjust = 0.5),
color = "white", size = 3) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Year",
y= "Unemployment Rate",
title = "USA/CAN/CHN/FRA Stacked Bar Comparison of UE Rate (1991-2021)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"))
ggplot(UE_Compare, mapping = aes(x=as.factor(Year),y=UE_rate, fill = Country.Code))+
geom_bar(stat = "identity",position = "fill")+
geom_text(aes(label = sprintf("%.1f", UE_rate),
group = Country.Code),
position = position_fill(vjust = 0.5),
color = "white", size = 3) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Year",
y= "Unemployment Rate",
title = "USA/CAN/CHN/FRA Stacked Bar Comparison of UE Rate (1991-2021)",
caption = "By: Alex Mendoza")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = .5),
plot.title = element_text(hjust = .5, face = "bold"))
#Load Libraries
library(nflverse)
library(dplyr)
##### Load Play by Play
## nflreadr::clear_cache()
pbp <- nflfastR::load_pbp(seasons = c(2021,2022,2023))
View(pbp)
## Passer Stats
passer.stats <- pbp %>%
group_by(game_id,
season,
week,
team = posteam,
passer) %>%
filter(play_type == 'pass'
& two_point_attempt == 0
& sack == 0) %>%
summarize(PassingYards = sum(yards_gained, na.rm = T),
PassAttempts = sum(pass_attempt),
PassCompletions = sum(complete_pass),
CompletedPercent = PassCompletions/PassAttempts * 100,
YardsPerCompletion = PassingYards/PassCompletions,
Interceptions = sum(interception),
Touchdown = sum(touchdown)
)
View(passer.stats)
## Rusher Stats
# will need to clean up a bit of NAs in the rusher field (why does this happen)
rusher.stats <- pbp %>%
group_by(game_id,
season,
week,
team = posteam,
rusher_player_name) %>%
filter(play_type == 'run'
& two_point_attempt == 0
& sack == 0) %>%
summarize(RushingYards = sum(rushing_yards),
RushAttempts = sum(rush_attempt),
YardsPerCarry = RushingYards/RushAttempts
)
## Receiver Stats
receiver.stats <- pbp %>%
group_by(game_id,
season,
week,
team = posteam,
receiver_player_name) %>%
filter(play_type == 'pass'
& two_point_attempt == 0
& !is.na(receiver_player_name)) %>%
summarize(ReceivingYards = sum(yards_gained),
ReceptionTargets = sum(pass_attempt),
Receptions = sum(complete_pass),
YardsPerCatch = ReceivingYards/Receptions
)
Disaster_Lit___retired_June_1__2021_ <- read.csv("~/Disaster_Lit___retired_June_1__2021_.csv")
View(Disaster_Lit___retired_June_1__2021_)
library(shiny)
install.packages("shiny")
?shiny
runExample(01_Hello)
runExample("01_Hello")
library(shiny)
runExample("01_Hello")
runExample("01_Hello")
runExample("09_upload")
runExample("09_download")
runExample("09_Download")
ui <- pageWithSidebar(
# App title ----
headerPanel("Miles Per Gallon"),
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for variable to plot against mpg ----
selectInput("variable", "Variable:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
# Input: Checkbox for whether outliers should be included ----
checkboxInput("outliers", "Show outliers", TRUE)
),
# Main panel for displaying outputs ----
mainPanel()
)
# Data pre-processing ----
# Tweak the "am" variable to have nicer factor labels -- since this
# doesn't rely on any user inputs, we can do this once at startup
# and then use the value throughout the lifetime of the app
mpgData <- mtcars
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
# Define server logic to plot various variables against mpg ----
server <- function(input, output) {
# Compute the formula text ----
# This is in a reactive expression since it is shared by the
# output$caption and output$mpgPlot functions
formulaText <- reactive({
paste("mpg ~", input$variable)
})
# Return the formula text for printing as a caption ----
output$caption <- renderText({
formulaText()
})
# Generate a plot of the requested variable against mpg ----
# and only exclude outliers if requested
output$mpgPlot <- renderPlot({
boxplot(as.formula(formulaText()),
data = mpgData,
outline = input$outliers,
col = "#007bc2", pch = 19)
})
}
# Define UI for miles per gallon app ----
ui <- fluidPage(
# App title ----
titlePanel("Miles Per Gallon"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for variable to plot against mpg ----
selectInput("variable", "Variable:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
# Input: Checkbox for whether outliers should be included ----
checkboxInput("outliers", "Show outliers", TRUE)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Formatted text for caption ----
h3(textOutput("caption")),
# Output: Plot of the requested variable against mpg ----
plotOutput("mpgPlot")
)
)
)
ui <- fluidPage(
# App title ----
titlePanel("Miles Per Gallon"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for variable to plot against mpg ----
selectInput("variable", "Variable:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
# Input: Checkbox for whether outliers should be included ----
checkboxInput("outliers", "Show outliers", TRUE)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Formatted text for caption ----
h3(textOutput("caption")),
# Output: Plot of the requested variable against mpg ----
plotOutput("mpgPlot")
)
)
)
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
library(shiny)
#############################################
#                                           #
# Author:     Alex Mendoza                  #
# Date:       02/04/2024                    #
# Subject:    Project 2                     #
# Class:      BDAT 630                      #
# Section:    01W                           #
#                                           #
#############################################
setwd("C:\Users\frede\OneDrive\Apps\app.R")
#############################################
#                                           #
# Author:     Alex Mendoza                  #
# Date:       02/04/2024                    #
# Subject:    Project 2                     #
# Class:      BDAT 630                      #
# Section:    01W                           #
#                                           #
#############################################
setwd("~\Users\frede\OneDrive\Apps\app.R")
#############################################
#                                           #
# Author:     Alex Mendoza                  #
# Date:       02/04/2024                    #
# Subject:    Project 2                     #
# Class:      BDAT 630                      #
# Section:    01W                           #
#                                           #
#############################################
setwd(~\Users\frede\OneDrive\Apps\app.R)
version
library(shiny)
R.Version()
shiny::runApp('C:/Users/frede/OneDrive/Apps/app.R/ezEDA')
runApp('C:/Users/frede/OneDrive/Apps/app.R/ezEDA')
